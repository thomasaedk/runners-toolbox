# This workflow deploys the webapp to Railway on pushes to main.
# Markdown file and gitignore changes alone don't trigger a deployment.

name: Deploy to Railway

on:
  push:
    branches: [main]

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      deployment_files_changed: ${{ steps.cf.outputs.other_changed_files }}
    steps:
      - uses: actions/checkout@v3
        with:
          # Fetch full history. For a more efficient solution, use 'fetch-depth: 1' and fetch the base commit:
          # git fetch origin ${{ github.event.before }} --depth=1
          fetch-depth: 0
      - id: cf
        uses: tj-actions/changed-files@v46.0.5
        with:
          files: |
            **/*.md
            .gitignore

  deploy:
    needs: check-changes
    if: needs.check-changes.outputs.deployment_files_changed != ''
    runs-on: ubuntu-latest
    container: ghcr.io/railwayapp/cli:latest
    env:
      SERVICE_ID: 04ff675f-f949-449e-ae19-0d382d88cff9
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - run: railway up --service=${{ env.SERVICE_ID }} --ci
      - name: Add to summary
        run: |
          {
            echo "🚀 Deployment ran because files other than Markdown or gitignore were changed."
            echo "🌐 The application is available at: [https://runners-toolbox.up.railway.app/](https://runners-toolbox.up.railway.app/)"
          } >> $GITHUB_STEP_SUMMARY

  skip-deploy:
    needs: check-changes
    if: needs.check-changes.outputs.deployment_files_changed == ''
    runs-on: ubuntu-latest
    steps:
      - run: echo "Only Markdown files or gitignore were changed. Skipping deployment."
      - name: Add to summary
        run: echo "✅ Deployment was skipped because only Markdown files or gitignore were changed." >> $GITHUB_STEP_SUMMARY
